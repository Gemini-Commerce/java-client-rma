/*
 * RMA Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import GeminiCommerce_Rma.ApiException;
import org.openapitools.client.model.RmaAddNoteRequest;
import org.openapitools.client.model.RmaApproveReturnRequest;
import org.openapitools.client.model.RmaCancelReturnRequest;
import org.openapitools.client.model.RmaConfirmReturnApproveItemsRequest;
import org.openapitools.client.model.RmaCreateReturnRequest;
import org.openapitools.client.model.RmaDeleteNoteRequest;
import org.openapitools.client.model.RmaEditNoteRequest;
import org.openapitools.client.model.RmaGetReturnRequest;
import org.openapitools.client.model.RmaListNotesByReturnIdRequest;
import org.openapitools.client.model.RmaListNotesByReturnIdResponse;
import org.openapitools.client.model.RmaListReturnsRequest;
import org.openapitools.client.model.RmaListReturnsResponse;
import org.openapitools.client.model.RmaNoteResponse;
import org.openapitools.client.model.RmaRefundReturnRequest;
import org.openapitools.client.model.RmaRejectReturnRequest;
import org.openapitools.client.model.RmaReturnResponse;
import org.openapitools.client.model.RmaSetReceivedItemsRequest;
import org.openapitools.client.model.RmaSkipReturnStatusRequest;
import org.openapitools.client.model.RpcStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RmaApi
 */
@Disabled
public class RmaApiTest {

    private final RmaApi api = new RmaApi();

    /**
     * Add a note to an RMA
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNoteTest() throws ApiException {
        RmaAddNoteRequest body = null;
        RmaNoteResponse response = api.addNote(body);
        // TODO: test validations
    }

    /**
     * Approve a return
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void approveReturnTest() throws ApiException {
        RmaApproveReturnRequest body = null;
        RpcStatus response = api.approveReturn(body);
        // TODO: test validations
    }

    /**
     * Cancel a return
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelReturnTest() throws ApiException {
        RmaCancelReturnRequest body = null;
        Object response = api.cancelReturn(body);
        // TODO: test validations
    }

    /**
     * Confirm return approve items
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void confirmReturnApproveItemsTest() throws ApiException {
        RmaConfirmReturnApproveItemsRequest body = null;
        Object response = api.confirmReturnApproveItems(body);
        // TODO: test validations
    }

    /**
     * Create a return
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createReturnTest() throws ApiException {
        RmaCreateReturnRequest body = null;
        RmaReturnResponse response = api.createReturn(body);
        // TODO: test validations
    }

    /**
     * Delete a note from an RMA
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteNoteTest() throws ApiException {
        RmaDeleteNoteRequest body = null;
        Object response = api.deleteNote(body);
        // TODO: test validations
    }

    /**
     * Edit a note on an RMA
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editNoteTest() throws ApiException {
        RmaEditNoteRequest body = null;
        RmaNoteResponse response = api.editNote(body);
        // TODO: test validations
    }

    /**
     * Get a return
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReturnTest() throws ApiException {
        RmaGetReturnRequest body = null;
        RmaReturnResponse response = api.getReturn(body);
        // TODO: test validations
    }

    /**
     * List notes by return id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listNotesByReturnIdTest() throws ApiException {
        RmaListNotesByReturnIdRequest body = null;
        RmaListNotesByReturnIdResponse response = api.listNotesByReturnId(body);
        // TODO: test validations
    }

    /**
     * List returns
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listReturnsTest() throws ApiException {
        RmaListReturnsRequest body = null;
        RmaListReturnsResponse response = api.listReturns(body);
        // TODO: test validations
    }

    /**
     * Refund a return
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refundReturnTest() throws ApiException {
        RmaRefundReturnRequest body = null;
        Object response = api.refundReturn(body);
        // TODO: test validations
    }

    /**
     * Reject a return
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rejectReturnTest() throws ApiException {
        RmaRejectReturnRequest body = null;
        Object response = api.rejectReturn(body);
        // TODO: test validations
    }

    /**
     * Set received items
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setReceivedItemsTest() throws ApiException {
        RmaSetReceivedItemsRequest body = null;
        Object response = api.setReceivedItems(body);
        // TODO: test validations
    }

    /**
     * Skip a return status
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void skipReturnStatusTest() throws ApiException {
        RmaSkipReturnStatusRequest body = null;
        Object response = api.skipReturnStatus(body);
        // TODO: test validations
    }

}
