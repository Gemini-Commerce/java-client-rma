/*
 * RMA Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import GeminiCommerce_Rma.JSON;

/**
 * ListReturnsRequestFilter
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-29T12:17:10.426764957Z[Etc/UTC]")
public class ListReturnsRequestFilter {
  public static final String SERIALIZED_NAME_SEARCH_TERMS = "searchTerms";
  @SerializedName(SERIALIZED_NAME_SEARCH_TERMS)
  private List<String> searchTerms;

  public static final String SERIALIZED_NAME_RETURN_IDS = "returnIds";
  @SerializedName(SERIALIZED_NAME_RETURN_IDS)
  private List<String> returnIds;

  public static final String SERIALIZED_NAME_RETURN_STATUS = "returnStatus";
  @SerializedName(SERIALIZED_NAME_RETURN_STATUS)
  private List<String> returnStatus;

  public static final String SERIALIZED_NAME_ORDER_GRNS = "orderGrns";
  @SerializedName(SERIALIZED_NAME_ORDER_GRNS)
  private List<String> orderGrns;

  public static final String SERIALIZED_NAME_ORDER_NUMBERS = "orderNumbers";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBERS)
  private List<String> orderNumbers;

  public static final String SERIALIZED_NAME_ORDER_ITEM_GRNS = "orderItemGrns";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_GRNS)
  private List<String> orderItemGrns;

  public static final String SERIALIZED_NAME_ORDER_ITEM_SKUS = "orderItemSkus";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_SKUS)
  private List<String> orderItemSkus;

  public static final String SERIALIZED_NAME_CUSTOMER_GRNS = "customerGrns";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_GRNS)
  private List<String> customerGrns;

  public static final String SERIALIZED_NAME_CUSTOMER_EMAILS = "customerEmails";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_EMAILS)
  private List<String> customerEmails;

  public static final String SERIALIZED_NAME_CREATED_AT_START = "createdAtStart";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_START)
  private OffsetDateTime createdAtStart;

  public static final String SERIALIZED_NAME_CREATED_AT_END = "createdAtEnd";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_END)
  private OffsetDateTime createdAtEnd;

  public ListReturnsRequestFilter() {
  }

  public ListReturnsRequestFilter searchTerms(List<String> searchTerms) {
    this.searchTerms = searchTerms;
    return this;
  }

  public ListReturnsRequestFilter addSearchTermsItem(String searchTermsItem) {
    if (this.searchTerms == null) {
      this.searchTerms = new ArrayList<>();
    }
    this.searchTerms.add(searchTermsItem);
    return this;
  }

   /**
   * Get searchTerms
   * @return searchTerms
  **/
  @javax.annotation.Nullable
  public List<String> getSearchTerms() {
    return searchTerms;
  }

  public void setSearchTerms(List<String> searchTerms) {
    this.searchTerms = searchTerms;
  }


  public ListReturnsRequestFilter returnIds(List<String> returnIds) {
    this.returnIds = returnIds;
    return this;
  }

  public ListReturnsRequestFilter addReturnIdsItem(String returnIdsItem) {
    if (this.returnIds == null) {
      this.returnIds = new ArrayList<>();
    }
    this.returnIds.add(returnIdsItem);
    return this;
  }

   /**
   * Get returnIds
   * @return returnIds
  **/
  @javax.annotation.Nullable
  public List<String> getReturnIds() {
    return returnIds;
  }

  public void setReturnIds(List<String> returnIds) {
    this.returnIds = returnIds;
  }


  public ListReturnsRequestFilter returnStatus(List<String> returnStatus) {
    this.returnStatus = returnStatus;
    return this;
  }

  public ListReturnsRequestFilter addReturnStatusItem(String returnStatusItem) {
    if (this.returnStatus == null) {
      this.returnStatus = new ArrayList<>();
    }
    this.returnStatus.add(returnStatusItem);
    return this;
  }

   /**
   * Get returnStatus
   * @return returnStatus
  **/
  @javax.annotation.Nullable
  public List<String> getReturnStatus() {
    return returnStatus;
  }

  public void setReturnStatus(List<String> returnStatus) {
    this.returnStatus = returnStatus;
  }


  public ListReturnsRequestFilter orderGrns(List<String> orderGrns) {
    this.orderGrns = orderGrns;
    return this;
  }

  public ListReturnsRequestFilter addOrderGrnsItem(String orderGrnsItem) {
    if (this.orderGrns == null) {
      this.orderGrns = new ArrayList<>();
    }
    this.orderGrns.add(orderGrnsItem);
    return this;
  }

   /**
   * Get orderGrns
   * @return orderGrns
  **/
  @javax.annotation.Nullable
  public List<String> getOrderGrns() {
    return orderGrns;
  }

  public void setOrderGrns(List<String> orderGrns) {
    this.orderGrns = orderGrns;
  }


  public ListReturnsRequestFilter orderNumbers(List<String> orderNumbers) {
    this.orderNumbers = orderNumbers;
    return this;
  }

  public ListReturnsRequestFilter addOrderNumbersItem(String orderNumbersItem) {
    if (this.orderNumbers == null) {
      this.orderNumbers = new ArrayList<>();
    }
    this.orderNumbers.add(orderNumbersItem);
    return this;
  }

   /**
   * Get orderNumbers
   * @return orderNumbers
  **/
  @javax.annotation.Nullable
  public List<String> getOrderNumbers() {
    return orderNumbers;
  }

  public void setOrderNumbers(List<String> orderNumbers) {
    this.orderNumbers = orderNumbers;
  }


  public ListReturnsRequestFilter orderItemGrns(List<String> orderItemGrns) {
    this.orderItemGrns = orderItemGrns;
    return this;
  }

  public ListReturnsRequestFilter addOrderItemGrnsItem(String orderItemGrnsItem) {
    if (this.orderItemGrns == null) {
      this.orderItemGrns = new ArrayList<>();
    }
    this.orderItemGrns.add(orderItemGrnsItem);
    return this;
  }

   /**
   * Get orderItemGrns
   * @return orderItemGrns
  **/
  @javax.annotation.Nullable
  public List<String> getOrderItemGrns() {
    return orderItemGrns;
  }

  public void setOrderItemGrns(List<String> orderItemGrns) {
    this.orderItemGrns = orderItemGrns;
  }


  public ListReturnsRequestFilter orderItemSkus(List<String> orderItemSkus) {
    this.orderItemSkus = orderItemSkus;
    return this;
  }

  public ListReturnsRequestFilter addOrderItemSkusItem(String orderItemSkusItem) {
    if (this.orderItemSkus == null) {
      this.orderItemSkus = new ArrayList<>();
    }
    this.orderItemSkus.add(orderItemSkusItem);
    return this;
  }

   /**
   * Get orderItemSkus
   * @return orderItemSkus
  **/
  @javax.annotation.Nullable
  public List<String> getOrderItemSkus() {
    return orderItemSkus;
  }

  public void setOrderItemSkus(List<String> orderItemSkus) {
    this.orderItemSkus = orderItemSkus;
  }


  public ListReturnsRequestFilter customerGrns(List<String> customerGrns) {
    this.customerGrns = customerGrns;
    return this;
  }

  public ListReturnsRequestFilter addCustomerGrnsItem(String customerGrnsItem) {
    if (this.customerGrns == null) {
      this.customerGrns = new ArrayList<>();
    }
    this.customerGrns.add(customerGrnsItem);
    return this;
  }

   /**
   * Get customerGrns
   * @return customerGrns
  **/
  @javax.annotation.Nullable
  public List<String> getCustomerGrns() {
    return customerGrns;
  }

  public void setCustomerGrns(List<String> customerGrns) {
    this.customerGrns = customerGrns;
  }


  public ListReturnsRequestFilter customerEmails(List<String> customerEmails) {
    this.customerEmails = customerEmails;
    return this;
  }

  public ListReturnsRequestFilter addCustomerEmailsItem(String customerEmailsItem) {
    if (this.customerEmails == null) {
      this.customerEmails = new ArrayList<>();
    }
    this.customerEmails.add(customerEmailsItem);
    return this;
  }

   /**
   * Get customerEmails
   * @return customerEmails
  **/
  @javax.annotation.Nullable
  public List<String> getCustomerEmails() {
    return customerEmails;
  }

  public void setCustomerEmails(List<String> customerEmails) {
    this.customerEmails = customerEmails;
  }


  public ListReturnsRequestFilter createdAtStart(OffsetDateTime createdAtStart) {
    this.createdAtStart = createdAtStart;
    return this;
  }

   /**
   * Get createdAtStart
   * @return createdAtStart
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAtStart() {
    return createdAtStart;
  }

  public void setCreatedAtStart(OffsetDateTime createdAtStart) {
    this.createdAtStart = createdAtStart;
  }


  public ListReturnsRequestFilter createdAtEnd(OffsetDateTime createdAtEnd) {
    this.createdAtEnd = createdAtEnd;
    return this;
  }

   /**
   * Get createdAtEnd
   * @return createdAtEnd
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAtEnd() {
    return createdAtEnd;
  }

  public void setCreatedAtEnd(OffsetDateTime createdAtEnd) {
    this.createdAtEnd = createdAtEnd;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListReturnsRequestFilter listReturnsRequestFilter = (ListReturnsRequestFilter) o;
    return Objects.equals(this.searchTerms, listReturnsRequestFilter.searchTerms) &&
        Objects.equals(this.returnIds, listReturnsRequestFilter.returnIds) &&
        Objects.equals(this.returnStatus, listReturnsRequestFilter.returnStatus) &&
        Objects.equals(this.orderGrns, listReturnsRequestFilter.orderGrns) &&
        Objects.equals(this.orderNumbers, listReturnsRequestFilter.orderNumbers) &&
        Objects.equals(this.orderItemGrns, listReturnsRequestFilter.orderItemGrns) &&
        Objects.equals(this.orderItemSkus, listReturnsRequestFilter.orderItemSkus) &&
        Objects.equals(this.customerGrns, listReturnsRequestFilter.customerGrns) &&
        Objects.equals(this.customerEmails, listReturnsRequestFilter.customerEmails) &&
        Objects.equals(this.createdAtStart, listReturnsRequestFilter.createdAtStart) &&
        Objects.equals(this.createdAtEnd, listReturnsRequestFilter.createdAtEnd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchTerms, returnIds, returnStatus, orderGrns, orderNumbers, orderItemGrns, orderItemSkus, customerGrns, customerEmails, createdAtStart, createdAtEnd);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListReturnsRequestFilter {\n");
    sb.append("    searchTerms: ").append(toIndentedString(searchTerms)).append("\n");
    sb.append("    returnIds: ").append(toIndentedString(returnIds)).append("\n");
    sb.append("    returnStatus: ").append(toIndentedString(returnStatus)).append("\n");
    sb.append("    orderGrns: ").append(toIndentedString(orderGrns)).append("\n");
    sb.append("    orderNumbers: ").append(toIndentedString(orderNumbers)).append("\n");
    sb.append("    orderItemGrns: ").append(toIndentedString(orderItemGrns)).append("\n");
    sb.append("    orderItemSkus: ").append(toIndentedString(orderItemSkus)).append("\n");
    sb.append("    customerGrns: ").append(toIndentedString(customerGrns)).append("\n");
    sb.append("    customerEmails: ").append(toIndentedString(customerEmails)).append("\n");
    sb.append("    createdAtStart: ").append(toIndentedString(createdAtStart)).append("\n");
    sb.append("    createdAtEnd: ").append(toIndentedString(createdAtEnd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("searchTerms");
    openapiFields.add("returnIds");
    openapiFields.add("returnStatus");
    openapiFields.add("orderGrns");
    openapiFields.add("orderNumbers");
    openapiFields.add("orderItemGrns");
    openapiFields.add("orderItemSkus");
    openapiFields.add("customerGrns");
    openapiFields.add("customerEmails");
    openapiFields.add("createdAtStart");
    openapiFields.add("createdAtEnd");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ListReturnsRequestFilter
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListReturnsRequestFilter.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListReturnsRequestFilter is not found in the empty JSON string", ListReturnsRequestFilter.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListReturnsRequestFilter.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListReturnsRequestFilter` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("searchTerms") != null && !jsonObj.get("searchTerms").isJsonNull() && !jsonObj.get("searchTerms").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchTerms` to be an array in the JSON string but got `%s`", jsonObj.get("searchTerms").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("returnIds") != null && !jsonObj.get("returnIds").isJsonNull() && !jsonObj.get("returnIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnIds` to be an array in the JSON string but got `%s`", jsonObj.get("returnIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("returnStatus") != null && !jsonObj.get("returnStatus").isJsonNull() && !jsonObj.get("returnStatus").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnStatus` to be an array in the JSON string but got `%s`", jsonObj.get("returnStatus").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("orderGrns") != null && !jsonObj.get("orderGrns").isJsonNull() && !jsonObj.get("orderGrns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderGrns` to be an array in the JSON string but got `%s`", jsonObj.get("orderGrns").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("orderNumbers") != null && !jsonObj.get("orderNumbers").isJsonNull() && !jsonObj.get("orderNumbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("orderNumbers").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("orderItemGrns") != null && !jsonObj.get("orderItemGrns").isJsonNull() && !jsonObj.get("orderItemGrns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItemGrns` to be an array in the JSON string but got `%s`", jsonObj.get("orderItemGrns").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("orderItemSkus") != null && !jsonObj.get("orderItemSkus").isJsonNull() && !jsonObj.get("orderItemSkus").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItemSkus` to be an array in the JSON string but got `%s`", jsonObj.get("orderItemSkus").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customerGrns") != null && !jsonObj.get("customerGrns").isJsonNull() && !jsonObj.get("customerGrns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerGrns` to be an array in the JSON string but got `%s`", jsonObj.get("customerGrns").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customerEmails") != null && !jsonObj.get("customerEmails").isJsonNull() && !jsonObj.get("customerEmails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerEmails` to be an array in the JSON string but got `%s`", jsonObj.get("customerEmails").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListReturnsRequestFilter.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListReturnsRequestFilter' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListReturnsRequestFilter> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListReturnsRequestFilter.class));

       return (TypeAdapter<T>) new TypeAdapter<ListReturnsRequestFilter>() {
           @Override
           public void write(JsonWriter out, ListReturnsRequestFilter value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListReturnsRequestFilter read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ListReturnsRequestFilter given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ListReturnsRequestFilter
  * @throws IOException if the JSON string is invalid with respect to ListReturnsRequestFilter
  */
  public static ListReturnsRequestFilter fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListReturnsRequestFilter.class);
  }

 /**
  * Convert an instance of ListReturnsRequestFilter to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

